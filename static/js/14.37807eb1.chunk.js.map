{"version":3,"sources":["views/app-views/clients/client-list/EditClient.js","views/app-views/clients/index.js"],"names":["REDIRECT_AFTER_EDIT","APP_PREFIX_PATH","EditClient","client","this","props","Loading","cover","undefined","name","email","username","phone","website","address","street","city","zipcode","company","className","layout","initialValues","onFinish","values","key","message","loading","content","setTimeout","setState","userName","dateOfBirth","phoneNumber","postcode","success","duration","history","push","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","type","htmlType","Component","connect","state","clientId","match","params","id","data","clients","getClientById","mapDispatchToProps","fetchClients","useEffect","fallback","path","url","component","lazy"],"mappings":"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","file":"static/js/14.37807eb1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button, Input, Row, Col, message } from 'antd';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\nimport { getClientById } from 'utils';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nconst REDIRECT_AFTER_EDIT = `${APP_PREFIX_PATH}/clients/client-list`;\r\n\r\nexport class EditClient extends Component {\r\n\r\n  render() {\r\n    const onFinish = values => {\r\n      const key = 'updatable';\r\n      message.loading({ content: 'Updating...', key });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          name: values.name,\r\n          email: values.email,\r\n          userName: values.userName,\r\n          dateOfBirth: values.dateOfBirth,\r\n          phoneNumber: values.phoneNumber,\r\n          website: values.website,\r\n          address: values.address,\r\n          city: values.city,\r\n          postcode: values.postcode,\r\n        })\r\n        message.success({ content: 'Done!', key, duration: 2 });\r\n        this.props.history.push(REDIRECT_AFTER_EDIT)\r\n      }, 1000);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const { client } = this.props;\r\n    if (client === null) {\r\n      return <Loading cover=\"content\" />\r\n    }\r\n    if (client === undefined) {\r\n      return <div>Client not found. Invalid client id</div>\r\n    }\r\n    const { name, email, username, phone, website, address: { street, city, zipcode }, company } = client;\r\n    return (\r\n      <>\r\n        <div className=\"mt-4\">\r\n          <Form\r\n            name=\"basicInformation\"\r\n            layout=\"vertical\"\r\n            initialValues={\r\n              {\r\n                'name': name,\r\n                'email': email,\r\n                'username': username,\r\n                'phoneNumber': phone,\r\n                'company': company.name,\r\n                'website': website,\r\n                'street': street,\r\n                'city': city,\r\n                'zipcode': zipcode\r\n              }\r\n            }\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={16}>\r\n                <Row gutter={ROW_GUTTER}>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your name!',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Username\"\r\n                      name=\"username\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your username!'\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      rules={[{\r\n                        required: true,\r\n                        type: 'email',\r\n                        message: 'Please enter a valid email!'\r\n                      }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      rules={[{\r\n                        required: true,\r\n                        message: 'Please enter your phone'\r\n                      }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Company\"\r\n                      name=\"company\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your company!'\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Website\"\r\n                      name=\"website\"\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"City\"\r\n                      name=\"city\"\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Street\"\r\n                      name=\"street\"\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={24} md={12}>\r\n                    <Form.Item\r\n                      label=\"Zip code\"\r\n                      name=\"zipcode\"\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Save Change\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const clientId = props.match.params.id;\r\n  const { clients: { data } } = state;\r\n  if (data) {\r\n    const client = getClientById(data, clientId);\r\n    return { client }\r\n  } else {\r\n    return { client: null }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditClient);\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport EditClient from \"./client-list/EditClient\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchClients } from \"redux/actions/Clients\";\r\n\r\nconst Clients = (props) => {\r\n  const { match, fetchClients } = props;\r\n\r\n  useEffect(() => {\r\n    fetchClients()\r\n  }, [fetchClients]);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route path={`${match.url}/client-list`} component={lazy(() => import(`./client-list/ClientList`))} />\r\n        <Route path={`${match.url}/edit-client/:id`} component={EditClient} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchClients\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Clients);"],"sourceRoot":""}