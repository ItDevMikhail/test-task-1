{"version":3,"sources":["components/shared-components/Loading/index.js","history.js","auth/FetchInterceptor.js","components/shared-components/Flex/index.js","redux/actions/Clients.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/Clients.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","services/FetchService.js","redux/sagas/Clients.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/entries/ja_JP.js","lang/index.js","lang/entries/ru_RU.js","views/index.js","App.js","serviceWorker.js","index.js","utils/index.js","redux/actions/Auth.js","redux/constants/Clients.js"],"names":["Icon","style","fontSize","spin","Loading","props","align","cover","className","indicator","defaultProps","history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","fetchClients","type","FETCH_CLIENTS","fetchClientsSuccess","FETCH_CLIENTS_SUCCESS","payload","fetchClientsFailure","FETCH_CLIENTS_FAILURE","APP_NAME","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","showMessage","redirect","token","auth","state","action","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","Clients","reducers","combineReducers","Theme","Auth","clients","FirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","fetchSevice","fetch","url","method","getClientList","FetchService","getClients","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","appsNavTree","AppstoreOutlined","MailOutlined","MessageOutlined","CalendarOutlined","BulbOutlined","docsNavTree","BookOutlined","FileUnknownOutlined","ProfileOutlined","navigationConfig","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","color","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","value","rgb","rgba","r","g","b","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","i","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","hex","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","pathname","buildBreadcrumb","_","slice","join","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","JaLang","antdJaJP","jaMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","jaLang","ru","antdRuRu","ruMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Utils","initials","shift","pop","navTree","route","p","hasOwnProperty","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","input","screens","breakpoints","getClientById","find","client","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.c63530d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import {\r\n  FETCH_CLIENTS,\r\n  FETCH_CLIENTS_SUCCESS,\r\n  FETCH_CLIENTS_FAILURE\r\n} from '../constants/Clients';\r\n\r\n\r\nexport const fetchClients = () => {\r\n  return {\r\n    type: FETCH_CLIENTS,\r\n  }\r\n};\r\n\r\nexport const fetchClientsSuccess = (data) => {\r\n  return {\r\n    type: FETCH_CLIENTS_SUCCESS,\r\n    payload: data\r\n  }\r\n};\r\n\r\nexport const fetchClientsFailure = (message) => {\r\n  return {\r\n    type: FETCH_CLIENTS_FAILURE,\r\n    payload: message\r\n  };\r\n};","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'ru',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","const dev = {\r\n\tAPI_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n\tAPI_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst test = {\r\n\tAPI_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {\r\n  FETCH_CLIENTS,\r\n  FETCH_CLIENTS_SUCCESS,\r\n  FETCH_CLIENTS_FAILURE\r\n} from '../constants/Clients';\r\n\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  data: null,\r\n}\r\n\r\nconst Clients = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CLIENTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_CLIENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload,\r\n      };\r\n    case FETCH_CLIENTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Clients","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport Clients from './Clients';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    clients: Clients\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: \"AIzaSyDLLazuGltFCqB8SD8oZN14-zrcGLKe69c\",\r\n  authDomain: \"test-task-1-4fc0b.firebaseapp.com\",\r\n  projectId: \"test-task-1-4fc0b\",\r\n  storageBucket: \"test-task-1-4fc0b.firebasestorage.app\",\r\n  messagingSenderId: \"1054261811743\",\r\n  appId: \"1:1054261811743:web:34f9c58c8c7e794023d32a\"\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import fetch from 'auth/FetchInterceptor'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\n\r\nconst fetchSevice = {}\r\n\r\nfetchSevice.getClients = function () {\r\n  return fetch({\r\n    url: `${API_BASE_URL}/users`,\r\n    method: 'get',\r\n  })\r\n}\r\n\r\nfetchSevice.setPost = function (data) {\r\n  return fetch({\r\n    url: '/posts',\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\nexport default fetchSevice\r\n","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\n\r\nimport { FETCH_CLIENTS } from '../constants/Clients';\r\nimport { fetchClientsFailure, fetchClientsSuccess } from '../actions/Clients';\r\nimport FetchService from 'services/FetchService'\r\n\r\n\r\n\r\nexport function* getClientList() {\r\n  yield takeEvery(FETCH_CLIENTS, function* () {\r\n    try {\r\n      const response = yield call(FetchService.getClients)\r\n      yield put(fetchClientsSuccess(response))\r\n    } catch (error) {\r\n      yield put(fetchClientsFailure(error))\r\n    }\r\n  })\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getClientList)])\r\n};","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\nimport Clients from './Clients';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n    Clients()\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  DashboardOutlined,\r\n  ShoppingCartOutlined,\r\n  ShoppingOutlined,\r\n  UserOutlined,\r\n  BookOutlined,\r\n  FileUnknownOutlined,\r\n  ProfileOutlined,\r\n  AppstoreOutlined,\r\n  BulbOutlined,\r\n  CalendarOutlined,\r\n  MessageOutlined,\r\n  MailOutlined\r\n\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'home',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'home',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'dashboards-default',\r\n      path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n      title: 'sidenav.dashboard.default',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }, {\r\n      key: 'apps-ecommerce',\r\n      path: `${APP_PREFIX_PATH}/ecommerce`,\r\n      title: 'sidenav.apps.ecommerce',\r\n      icon: ShoppingCartOutlined,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'apps-ecommerce-productList',\r\n          path: `${APP_PREFIX_PATH}/ecommerce/product-list`,\r\n          title: 'sidenav.apps.ecommerce.productList',\r\n          icon: '',\r\n          breadcrumb: true,\r\n          submenu: []\r\n        }\r\n      ]\r\n    }, {\r\n      key: 'apps-ecommerce-orders',\r\n      path: `${APP_PREFIX_PATH}/ecommerce/orders`,\r\n      title: 'sidenav.apps.ecommerce.orders',\r\n      icon: ShoppingOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'apps-clients',\r\n      path: `${APP_PREFIX_PATH}/clients`,\r\n      title: 'sidenav.apps.clients',\r\n      icon: UserOutlined,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'apps-clients-clientList',\r\n          path: `${APP_PREFIX_PATH}/clients/client-list`,\r\n          title: 'sidenav.apps.clients.clientList',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }, {\r\n          key: 'apps-clients-clientGroups',\r\n          path: `${APP_PREFIX_PATH}/clients/client-groups`,\r\n          title: 'sidenav.apps.clients.clientGroups',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}]\r\n\r\nconst appsNavTree = [{\r\n  key: 'apps',\r\n  path: `${APP_PREFIX_PATH}/apps`,\r\n  title: 'sidenav.apps',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'apps-mail',\r\n      path: `${APP_PREFIX_PATH}/apps/mail/inbox`,\r\n      title: 'sidenav.apps.mail',\r\n      icon: MailOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'apps-chat',\r\n      path: `${APP_PREFIX_PATH}/apps/chat`,\r\n      title: 'sidenav.apps.chat',\r\n      icon: MessageOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'apps-calendar',\r\n      path: `${APP_PREFIX_PATH}/apps/calendar`,\r\n      title: 'sidenav.apps.calendar',\r\n      icon: CalendarOutlined,\r\n      breadcrumb: true,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'apps-project',\r\n      path: `${APP_PREFIX_PATH}/apps/project`,\r\n      title: 'sidenav.apps.project',\r\n      icon: BulbOutlined,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'apps-project-list',\r\n          path: `${APP_PREFIX_PATH}/apps/project/list`,\r\n          title: 'sidenav.apps.project.list',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'apps-project-scrumboard',\r\n          path: `${APP_PREFIX_PATH}/apps/project/scrumboard`,\r\n          title: 'sidenav.apps.project.scrumboard',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}]\r\n\r\nconst docsNavTree = [{\r\n  key: 'docs',\r\n  path: `${APP_PREFIX_PATH}/docs`,\r\n  title: 'sidenav.docs',\r\n  icon: BookOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'docs-documentation',\r\n      path: `${APP_PREFIX_PATH}/docs/documentation`,\r\n      title: 'sidenav.docs.documentation',\r\n      icon: FileUnknownOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'docs-changelog',\r\n      path: `${APP_PREFIX_PATH}/docs/documentation/changelog`,\r\n      title: 'sidenav.docs.changelog',\r\n      icon: ProfileOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  ...appsNavTree,\r\n  ...docsNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/clients`} component={lazy(() => import(`./clients`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP';\r\nimport ruLang from './entries/ru_RU';\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang,\r\n    ru: ruLang\r\n};\r\n\r\nexport default AppLocale;","import antdRuRu from 'antd/es/locale/ru_RU';\r\nimport ruMsg from \"../locales/ru_RU.json\";\r\n\r\nconst RuLang = {\r\n  antd: antdRuRu,\r\n  locale: 'ru-RU',\r\n  messages: {\r\n    ...ruMsg\r\n  },\r\n};\r\nexport default RuLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif (navTree.path === path) {\r\n\t\t\treturn navTree;\r\n\t\t}\r\n\t\tlet route;\r\n\t\tfor (let p in navTree) {\r\n\t\t\tif (navTree.hasOwnProperty(p) && typeof navTree[p] === 'object') {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif (route) {\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex) {\r\n\t\tif (!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) { return parseInt((cutHex(h)).substring(0, 2), 16) }\r\n\t\tfunction hexToG(h) { return parseInt((cutHex(h)).substring(2, 4), 16) }\r\n\t\tfunction hexToB(h) { return parseInt((cutHex(h)).substring(4, 6), 16) }\r\n\t\tfunction cutHex(h) { return (h.charAt(0) === '#') ? h.substring(1, 7) : h }\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold) {\r\n\t\t\treturn 'dark'\r\n\t\t} else {\r\n\t\t\treturn 'light'\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1, 3), 16);\r\n\t\tlet G = parseInt(color.substring(3, 5), 16);\r\n\t\tlet B = parseInt(color.substring(5, 7), 16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R < 255) ? R : 255;\r\n\t\tG = (G < 255) ? G : 255;\r\n\t\tB = (B < 255) ? B : 255;\r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm, ''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif (typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif (typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif (list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif (list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;\r\n\r\nexport const getClientById = (clients, id) => {\r\n\treturn clients.find(client => client.id === +id)\r\n}","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","export const FETCH_CLIENTS = 'FETCH_CLIENTS'\r\nexport const FETCH_CLIENTS_SUCCESS = 'FETCH_CLIENTS_SUCCESS'\r\nexport const FETCH_CLIENTS_FAILURE = 'FETCH_CLIENTS_FAILURE'"],"sourceRoot":""}