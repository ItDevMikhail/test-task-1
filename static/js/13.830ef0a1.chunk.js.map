{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/clients/client-list/ClientList.js"],"names":["renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","ClientList","this","clients","data","tableColumns","title","dataIndex","render","_","record","username","sorter","compare","a","b","toLowerCase","email","length","company","website","loading","Loading","cover","bodyStyle","columns","dataSource","rowKey","onRow","index","history","push","APP_PREFIX_PATH","Component","connect","state"],"mappings":"oPAIMA,EAAe,SAAAC,GACpB,OAAO,cAAC,IAAD,2BAAYA,GAAZ,IAAmBC,UAAS,qBAAgBD,EAAME,MAAlD,SAA2DF,EAAMG,SAgC1DC,EA7Ba,SAAAJ,GAAU,IAC7BK,EAAqFL,EAArFK,KAAMC,EAA+EN,EAA/EM,OAAQC,EAAuEP,EAAvEO,SAAUC,EAA6DR,EAA7DQ,GAAIN,EAAyDF,EAAzDE,KAAMO,EAAmDT,EAAnDS,IAAKC,EAA8CV,EAA9CU,KAAMC,EAAwCX,EAAxCW,KAAMC,EAAkCZ,EAAlCY,MAAOC,EAA2Bb,EAA3Ba,IAAKV,EAAsBH,EAAtBG,KAAMW,EAAgBd,EAAhBc,YAC7E,OACC,sBAAKb,UAAU,0CAAf,UACEF,EAAa,CAACW,OAAMD,MAAKP,OAAMS,OAAMC,QAAOC,MAAKV,SAClD,sBAAKF,UAAU,OAAf,UACC,gCAEEa,EACA,qBAAKC,QAAS,kBAAMD,EAAY,CAACT,OAAME,WAAUE,MAAKD,QAAMP,UAAU,+BAAtE,SAAsGI,IAEtG,qBAAKJ,UAAU,qBAAf,SAAqCI,IAEtC,+BAAOC,OAER,qBAAKL,UAAU,oCAAf,SAAoDM,W,iBChB3CS,EAAb,uKAEW,IAAD,SAC+BC,KAAKjB,MAApCkB,QAAWC,EADX,EACWA,KACbC,EAAe,CACpB,CACCC,MAAO,OACPC,UAAW,OACXC,OAAQ,SAACC,EAAGC,GAAJ,OACP,qBAAKxB,UAAU,SAAf,SACC,cAAC,EAAD,CAAcQ,IAAK,GAAIJ,KAAMoB,EAAOpB,KAAME,SAAUkB,EAAOC,cAG7DC,OAAQ,CACPC,QAAS,SAACC,EAAGC,GAGZ,OAFAD,EAAIA,EAAExB,KAAK0B,gBACXD,EAAIA,EAAEzB,KAAK0B,gBACK,EAAID,EAAID,EAAI,EAAI,KAInC,CACCR,MAAO,QACPC,UAAW,QACXK,OAAQ,CACPC,QAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,MAAMC,OAASH,EAAEE,MAAMC,UAG9C,CACCZ,MAAO,UACPC,UAAW,UACXC,OAAQ,SAAAW,GAAO,OACd,iCAAOA,EAAQ7B,KAAf,QAEDsB,OAAQ,CACPC,QAAS,SAACC,EAAGC,GAGZ,OAFAD,EAAIA,EAAEK,QAAQ7B,KAAK0B,gBACnBD,EAAIA,EAAEI,QAAQ7B,KAAK0B,gBACH,EAAID,EAAID,EAAI,EAAI,KAInC,CACCR,MAAO,UACPC,UAAW,UACXC,OAAQ,SAAAY,GAAO,OACd,+BAAOA,KAERR,OAAQ,CACPC,QAAS,SAACC,EAAGC,GAGZ,OAFAD,EAAIA,EAAEM,QAAQJ,gBACdD,EAAIA,EAAEK,QAAQJ,gBACE,EAAID,EAAID,EAAI,EAAI,MAKpC,OAvDQ,EACiBO,QAsDP,cAACC,EAAA,EAAD,CAASC,MAAM,YAChC,cAAC,IAAD,CAAMC,UAAW,CAAE,QAAW,OAA9B,SACC,cAAC,IAAD,CAAOC,QAASpB,EAAcqB,WAAYtB,EAAMuB,OAAO,KAAKC,MAAO,SAACxB,EAAMyB,GACzE,MAAO,CACN7B,QAAS,WACR,EAAKf,MAAM6C,QAAQC,KAAnB,UAA2BC,IAA3B,gCAAkE5B,EAAKX,gBA9D9E,GAAgCwC,aA8EjBC,uBANS,SAACC,GACxB,MAAO,CAAEhC,QAASgC,EAAMhC,WAKV+B,CAAyBjC","file":"static/js/13.830ef0a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Table } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nexport class ClientList extends Component {\r\n\r\n\trender() {\r\n\t\tconst { clients: { data, loading } } = this.props;\r\n\t\tconst tableColumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Name',\r\n\t\t\t\tdataIndex: 'name',\r\n\t\t\t\trender: (_, record) => (\r\n\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t<AvatarStatus src={''} name={record.name} subTitle={record.username} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t\tsorter: {\r\n\t\t\t\t\tcompare: (a, b) => {\r\n\t\t\t\t\t\ta = a.name.toLowerCase();\r\n\t\t\t\t\t\tb = b.name.toLowerCase();\r\n\t\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Email',\r\n\t\t\t\tdataIndex: 'email',\r\n\t\t\t\tsorter: {\r\n\t\t\t\t\tcompare: (a, b) => a.email.length - b.email.length,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Company',\r\n\t\t\t\tdataIndex: 'company',\r\n\t\t\t\trender: company => (\r\n\t\t\t\t\t<span>{company.name} </span>\r\n\t\t\t\t),\r\n\t\t\t\tsorter: {\r\n\t\t\t\t\tcompare: (a, b) => {\r\n\t\t\t\t\t\ta = a.company.name.toLowerCase();\r\n\t\t\t\t\t\tb = b.company.name.toLowerCase();\r\n\t\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Website',\r\n\t\t\t\tdataIndex: 'website',\r\n\t\t\t\trender: website => (\r\n\t\t\t\t\t<span>{website}</span>\r\n\t\t\t\t),\r\n\t\t\t\tsorter: {\r\n\t\t\t\t\tcompare: (a, b) => {\r\n\t\t\t\t\t\ta = a.website.toLowerCase();\r\n\t\t\t\t\t\tb = b.website.toLowerCase();\r\n\t\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t];\r\n\t\treturn loading ? (<Loading cover=\"content\" />) : (\r\n\t\t\t<Card bodyStyle={{ 'padding': '0px' }}>\r\n\t\t\t\t<Table columns={tableColumns} dataSource={data} rowKey='id' onRow={(data, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\tthis.props.history.push(`${APP_PREFIX_PATH}/clients/edit-client/${data.id}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}} />\r\n\t\t\t</Card>\r\n\t\t)\r\n\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn { clients: state.clients }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(ClientList);"],"sourceRoot":""}